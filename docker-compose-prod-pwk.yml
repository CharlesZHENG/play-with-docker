version: '3.2'
services:
    haproxy:
        container_name: haproxy
        image: devopslabs.azurecr.io/pwd/haproxy
        ports:
            - "80:8080"
        volumes:
            - ./haproxy:/usr/local/etc/haproxy
        restart: always
            
    pwd:
        # pwd daemon container always needs to be named this way
        container_name: pwd
        # use the latest golang image
        image: devopslabs.azurecr.io/pwd/devopslabs-pwd:%{Build.BuildId}%
        # go to the right place and starts the app
        #command: /bin/sh -c 'ssh-keygen -N "" -t rsa -f /etc/ssh/ssh_host_rsa_key >/dev/null; cd /go/src/github.com/leansoftX/play-with-docker; go run api.go -save /pwd/sessions -name l2'
        volumes:
            # since this app creates networks and launches containers, we need to talk to docker daemon
            - /var/run/docker.sock:/var/run/docker.sock
            # mount the box mounted shared folder to the container
            # - $GOPATH/src:/go/src
            - sessions:/pwd
        environment:
            # use localhost for local development
            # use actual domain name when deploy to a server
            - PLAYGROUND_DOMAIN=play-with-k8s.cn
            # use franela/dind for pwd, franela/k8s for pwk
            - DEFAULT_DIND_IMAGE=franela/k8s
            # use default for pwd, k8s for k8s
            - ASSETS_DIR=k8s
            # Session Duration, 1h, 2h, 3h, 4h
            - DefaultSessionDuration=#{DefaultSessionDuration}#
        restart: always
    l2:
        container_name: l2
        # use the latest golang image
        image: devopslabs.azurecr.io/pwd/devopslabs-pwd-l2:%{Build.BuildId}%
        # go to the right place and starts the app
        # command: /bin/sh -c 'ssh-keygen -N "" -t rsa -f /etc/ssh/ssh_host_rsa_key >/dev/null; cd /go/src/github.com/leansoftX/play-with-docker/router/l2; go run l2.go -ssh_key_path /etc/ssh/ssh_host_rsa_key -name l2 -save /pwd/networks'
        volumes:
            # - $GOPATH/src:/go/src
            - /var/run/docker.sock:/var/run/docker.sock
            - networks:/pwd
        ports:
            - "8022:22"
            - "8053:53"
            - "443:443"
        restart: always
volumes:
    sessions:
    networks:
